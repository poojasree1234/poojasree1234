#include <stdio.h>
#include <stdlib.h>

long arrayManipulation(int n, int m, int queries[m][3]) {
    // Initialize the array with zeros
    long *arr = (long *)calloc(n + 2, sizeof(long)); // n+2 for safety

    // Apply difference array logic
    for (int i = 0; i < m; i++) {
        int a = queries[i][0];
        int b = queries[i][1];
        int k = queries[i][2];

        arr[a] += k;
        arr[b + 1] -= k;
    }

    // Compute prefix sum and find the maximum value
    long max_value = 0, current_sum = 0;
    for (int i = 1; i <= n; i++) {
        current_sum += arr[i];
        if (current_sum > max_value) {
            max_value = current_sum;
        }
    }

    // Free allocated memory
    free(arr);

    return max_value;
}

int main() {
    int n, m;
    scanf("%d %d", &n, &m);

    // Input the queries
    int queries[m][3];
    for (int i = 0; i < m; i++) {
        scanf("%d %d %d", &queries[i][0], &queries[i][1], &queries[i][2]);
    }

    // Call the function and print the result
    long result = arrayManipulation(n, m, queries);
    printf("%ld\n", result);

    return 0;
}
